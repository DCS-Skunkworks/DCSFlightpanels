<Window x:Class="DCSFlightpanels.Windows.JaceHelpWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DCSFlightpanels"
        mc:Ignorable="d"
        Title="Working with formulas" Height="800" Width="600" Icon="/dcsfp;component/Images/flightpanels02_8Rc_icon.ico" Loaded="Window_Loaded">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>
        <ScrollViewer Grid.Row="0">
            <TextBlock Margin="10,10,10,10" TextWrapping="Wrap">
                
                    <Hyperlink NavigateUri="https://forums.eagle.ru/showthread.php?t=137670" RequestNavigate="Hyperlink_OnRequestNavigate">
                        Please share your formulas and profiles with other pilots in the support thread!
                    </Hyperlink><LineBreak/><LineBreak/>
                    IMPORTANT : DCS-BIOS in almost all cases returns a value between 0-65536. You need to then apply a function to map this into the real cockpit value<LineBreak/><LineBreak/>
                    With the Formula sandbox you can monitor DCS-BIOS values in real-time.<LineBreak/>
                    1) Choose up to 5 values (DCS-BIOS outputs) to monitor<LineBreak/>
                    2) Copy/paste the identifier/name of the output to the formula box<LineBreak/>
                    3) Press "Test" to test the formula once or "Start" for continuous evaluation<LineBreak/><LineBreak/>
                
                    Separate variables in functions calls with space NOT COMMA SIGN.<LineBreak/><LineBreak/>
                
                    A-10C Examples:<LineBreak/><LineBreak/>
                    Returns the minimum/maximum of the fuel flow as raw value<LineBreak/>
                    min(L_ENG_FUEL_FLOW R_ENG_FUEL_FLOW)<LineBreak/>
                    max(L_ENG_FUEL_FLOW R_ENG_FUEL_FLOW)<LineBreak/><LineBreak/>
                
                    Heading to degrees<LineBreak/>
                    truncate(HSI_HDG*360/65536)<LineBreak/><LineBreak/>
                
                    Heading bug to degrees<LineBreak/>
                    truncate(HSI_HDG_KNOB*360/65536)<LineBreak/><LineBreak/>
                
                    Course needle to degrees<LineBreak/>
                    truncate(HSI_CRS_KNOB*360/65536)<LineBreak/><LineBreak/>
                
                    Basic math function examples<LineBreak/>
                    floor(4,341134)<LineBreak/>
                    ceiling(4,341134)<LineBreak/>
                    truncate(4,341134)<LineBreak/>
                    4,12515%1<LineBreak/>
                    abs(-12)<LineBreak/>
                    <LineBreak/>
                    ifless(a b c d)<LineBreak/>
                    If a &lt; b then return c else d<LineBreak/>
                    ifless(1 2 4 5) = 4<LineBreak/>
                    <LineBreak/>
                    ifmore(a b c d)<LineBreak/>
                    If a &gt; b then returns c else d<LineBreak/>
                    ifmore(1 2 4 5) = 5<LineBreak/>
            </TextBlock>
        </ScrollViewer>
        <DockPanel  Grid.Row="1">
            <Button Content="Close" Height="23" HorizontalAlignment="Right" x:Name="ButtonClose" Width="75" Margin="0,0,10,0" Click="ButtonClose_OnClick"/>
        </DockPanel>
    </Grid>
</Window>
